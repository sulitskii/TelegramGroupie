# âš¡ Docker Test Configuration for TelegramGroupie with Firestore Emulator
# Uses Google Cloud Firestore Emulator for real database testing

services:
  # Google Cloud Firestore Emulator
  firestore-emulator:
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:latest
    command: gcloud emulators firestore start --host-port=0.0.0.0:8081 --project=test-project
    ports:
      - "8081:8081"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  # Main application service
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=test  # Use dependency injection with test implementations
      - GCP_PROJECT_ID=test-project
      - WEBHOOK_SECRET=test_webhook_secret_123
      - TELEGRAM_TOKEN=test_token_123
      - FIRESTORE_EMULATOR_HOST=firestore-emulator:8081
      - KMS_LOCATION=global
      - KMS_KEY_RING=test-key-ring
      - KMS_KEY_ID=test-key-id
    networks:
      - test-network
    depends_on:
      firestore-emulator:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 3s
      timeout: 2s
      retries: 5
      start_period: 5s

  # Test runner service
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - ./tests:/app/tests
      - ./test-results:/app/test-results
    environment:
      - APP_URL=http://app:8080
      - FIRESTORE_EMULATOR_HOST=firestore-emulator:8081
      - APP_ENV=test  # Ensure test environment for test runner too
    networks:
      - test-network
    depends_on:
      app:
        condition: service_healthy

networks:
  test-network:
    driver: bridge
